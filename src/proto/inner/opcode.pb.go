// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/inner/opcode.proto

package inner

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 1-99 底层占用
// 100-19999是内部服务器消息
// 20000-49999客户端
// 50000-65535留给gm和其他节点使用
type OPCODE int32

const (
	//内置消息开始号
	OPCODE_EMPTY OPCODE = 0
	OPCODE_BEGIN OPCODE = 101
	// GS向Gate注册
	OPCODE_S2G_GS_REG OPCODE = 102
	// Gate返回给GS的注册结果
	OPCODE_G2S_GS_REG OPCODE = 103
	//内置消息结束号
	OPCODE_END OPCODE = 20000
)

var OPCODE_name = map[int32]string{
	0:     "EMPTY",
	101:   "BEGIN",
	102:   "S2G_GS_REG",
	103:   "G2S_GS_REG",
	20000: "END",
}

var OPCODE_value = map[string]int32{
	"EMPTY":      0,
	"BEGIN":      101,
	"S2G_GS_REG": 102,
	"G2S_GS_REG": 103,
	"END":        20000,
}

func (x OPCODE) String() string {
	return proto.EnumName(OPCODE_name, int32(x))
}

func (OPCODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a42cc72626c45d25, []int{0}
}

func init() {
	proto.RegisterEnum("inner.OPCODE", OPCODE_name, OPCODE_value)
}

func init() { proto.RegisterFile("proto/inner/opcode.proto", fileDescriptor_a42cc72626c45d25) }

var fileDescriptor_a42cc72626c45d25 = []byte{
	// 120 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x28, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0xcc, 0xcb, 0x4b, 0x2d, 0xd2, 0xcf, 0x2f, 0x48, 0xce, 0x4f, 0x49, 0xd5, 0x03,
	0x0b, 0x09, 0xb1, 0x82, 0xc5, 0xb4, 0x3c, 0xb9, 0xd8, 0xfc, 0x03, 0x9c, 0xfd, 0x5d, 0x5c, 0x85,
	0x38, 0xb9, 0x58, 0x5d, 0x7d, 0x03, 0x42, 0x22, 0x05, 0x18, 0x40, 0x4c, 0x27, 0x57, 0x77, 0x4f,
	0x3f, 0x81, 0x54, 0x21, 0x3e, 0x2e, 0xae, 0x60, 0x23, 0xf7, 0x78, 0xf7, 0xe0, 0xf8, 0x20, 0x57,
	0x77, 0x81, 0x34, 0x10, 0xdf, 0xdd, 0x28, 0x18, 0xc6, 0x4f, 0x17, 0xe2, 0xe4, 0x62, 0x76, 0xf5,
	0x73, 0x11, 0x58, 0x30, 0x87, 0x31, 0x89, 0x0d, 0x6c, 0xb0, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x84, 0xd9, 0xff, 0xf5, 0x74, 0x00, 0x00, 0x00,
}
